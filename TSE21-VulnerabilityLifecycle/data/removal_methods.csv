cve;fix_category;description
CVE-2014-1858;Remove Race Conditions;Replace mktemp() with the secure NamedTemporaryFile()
CVE-2018-16790;Prevent Access Over Bounds;Check l value properly by excluding the first four bytes from (len - o)
CVE-2014-1859;Remove Race Conditions;Replace mktemp() with the secure NamedTemporaryFile()
CVE-2014-8335;Sanitize External Input;Add use of escapeshellcmd() and avoid uploading files within queries
CVE-2018-18586;Sanitize External Input;Remove ../ and leading slashes in a given filepath
CVE-2013-3735;Handle Error Cases;Handle cases when zendparser returns 2, other than 1, to indicate an error
CVE-2018-13818;Sanitize External Input;Escape value of a HTTP request param
CVE-2016-9272;Sanitize External Input;"Cast ""id"" SQL query parameter as integer, blocking non integer values"
CVE-2017-6890;Change Buffer Size;"""huff"" buffers size increased to 1024 ushort (2048 bytes)"
CVE-2017-6887;Prevent Access Over Bounds;Block negative values of “len” because they are interpreted as big unsigned integer when fread() is used
CVE-2016-8339;Prevent Access Over Bounds;"The CONFIG SET now correctly accept only 3 out 4 types of clients: ""master"" class was excluded since it was only used for another command, so preventing the overflow of the buffer server.client_obuf_limits when master class is issued"
CVE-2018-8828;Change Buffer Size;An extra byte was allocated for a buffer to host a '\0' character
CVE-2017-8932;Handle Error Cases;Change relational operands 
CVE-2015-6506;Sanitize External Input;Escape messages before putting into response DOM
CVE-2017-6797;Sanitize External Input;Encode special characters as HTML entities
CVE-2017-7897;Sanitize External Input;Escape input parameter before generating an URL
CVE-2017-6799;Sanitize External Input;Encode value before putting into HTML response
CVE-2017-12927;Sanitize External Input;Encode special characters as HTML entities
CVE-2018-10897;Sanitize External Input;For reposync, resolve relative paths and ensure that the first part is the chosen base directory
CVE-2017-5595;Sanitize External Input;For viewfile, resolve relative paths and ensure that the first part is a known base directory
CVE-2016-10156;Handle Error Cases;Handle cases when a invalid file open mode (-1) is used for touch_file()
CVE-2017-13051;Prevent Access Over Bounds;"Prevent ""length"" field of the sub-object of a GENERALIZED_UNI RSVP object (RFC 3476) to be shorter than 4 bytes"
CVE-2018-1129;Employ New Algorithm;Implement CEPHX_V2 signature calculation algorithm, that validate the entire signature instead of a portion
CVE-2018-16840;Set Pointer To Null After Free;"Set the pointer field of struct ""data"", passed as argument, to NULL after a free()-like function"
CVE-2017-14039;Prevent Access Over Bounds;Check length parameter before writing to a heap-allocated buffer
CVE-2017-18190;Remove Untrusted Hosts;localhost.localdomain is not always an alias of localhost, so it cannot be 100% trusted
CVE-2017-14152;Prevent Access Over Bounds;Consider the case when parameters->numresolution is equal 1 to avoid write over bounds
CVE-2018-7688;Fix Initialization;"Review object is now created from another existing with the correct ""New"" state"
CVE-2017-14640;Check Before Dereferencing;Check m_SttsAtom value before dereferencing since its value is not known before
CVE-2017-14641;Check Before Dereferencing;Initialize m_source to NULL
CVE-2017-14642;Check Before Dereferencing;Avoid allocating an array of length = 0 when name_size equals -1, because it would return NULL
CVE-2017-2616;Remove Race Conditions;su Linux command now properly clears child processes PIDs
CVE-2017-6199;Sanitize External Input;"Sanite input emails, which used the ""comma trick"", with a proper regex"
CVE-2017-0152;Handle Error Cases;Assign the function name to the param scope
CVE-2017-0028;Prevent Access Over Bounds;Fix binding of 'async' identifier in the presence of async arrow function
CVE-2017-14650;Sanitize External Input;Cast index parameter from string to integer to avoid injections
CVE-2017-6201;Sanitize External Input;Blacklist some IPs on url parameter
CVE-2018-14716;Sanitize External Input;Avoid Twig code (i.e., a PHP template engine) to be injected into HTTP query params
CVE-2017-11464;Handle Error Cases;Avoid Division by Zero
CVE-2017-14164;Prevent Access Over Bounds;Check p_total_data_size before writing to p_data buffer
CVE-2018-3740;Sanitize External Input;Sanitize External Input HTML fragment, blocking non-whitelisted attributes
CVE-2018-6767;Prevent Access Over Bounds;Check size before writing to ds64_chunk buffer
CVE-2017-14041;Prevent Access Over Bounds;Fix format string in fscanf()
CVE-2017-18239;Remove Discrepancies Among Inputs;Use constant-time bitwise comparison for signatures
CVE-2011-4181;Change User Permissions;Allow upload of binary packages to admins only
CVE-2011-4183;Change User Permissions;Allow upload of binary packages to admins only
CVE-2015-2304;Sanitize External Input;Block '..' in filepaths by default
CVE-2016-1182;Improve Security Configuration;ActionForm now blocks multipart requests
CVE-2016-1181;Improve Security Configuration;ActionForm now blocks multipart requests
CVE-2015-2692;Ask User Confirmation;Subscription now requires the user approval
CVE-2018-13423;Sanitize External Input;Escape tag names
CVE-2018-12256;Sanitize External Input;Do not allow the upload of invalid XML files
CVE-2013-5576;Sanitize External Input;Remove trailing dots in a given filepath
CVE-2015-1849;Hide Sensitive Information;Do not print bind credential password when TRACE log level is enabled
CVE-2015-7519;Sanitize External Input;Make sure that HTTP headers with '-' are not treated in the same way as headers with '_' 
CVE-2017-13083;Improve Certificate Verification;Ensure that update downloads are signed from a CA rather than any user
CVE-2018-17553;Remove Vulnerable Code;Piknik upload was totally removed: it used to allow the upload of PHP files in arbitrary locations
CVE-2017-15054;Sanitize External Input;Do not allow the upload of arbitrary files
CVE-2017-12851;Change User Permissions;Filter variables when updating user profile
CVE-2017-0881;Change User Permissions;Do not allow any users to autosubscribe to invite-only streams without invite
CVE-2017-6886;Prevent Access Over Bounds;Block negative values of “len” because they are interpreted as big unsigned integer when fread() is used
CVE-2016-9888;Check Before Dereferencing;Check TAR file structure before using it to avoid the return of a NULL pointer
CVE-2017-2809;Avoid Deserialization of Untrusted And Harmful Data;Replace yaml.load() with the secure yaml.safe_load()
CVE-2017-16618;Avoid Deserialization of Untrusted And Harmful Data;Replace yaml.load() with the secure yaml.safe_load()
CVE-2017-16615;Avoid Deserialization of Untrusted And Harmful Data;Replace yaml.load() with the secure yaml.safe_load()
CVE-2018-12458;Change Buffer Size;Time-related variables change from int to int64_t
CVE-2020-15862;Change User Permissions;Make EXTEND MIB read-only by default
CVE-2017-5591;Change User Permissions;Do not allow any user to fake a CC message
CVE-2017-5592;Change User Permissions;Do not allow any user to fake a CC message
CVE-2017-5602;Change User Permissions;Do not allow any user to fake a CC message
CVE-2017-5605;Change User Permissions;Do not allow any user to fake a CC message
CVE-2018-15856;Handle Error Cases;Add EOF check in a loop of lex()
CVE-2017-0196;Prevent Access Over Bounds;Check index is within the range of old length of pArr in JavascriptArray::SliceHelper
CVE-2017-6349;Prevent Access Over Bounds;"Very high values of ""num_head” (due to corrupt undo files), which causes integer overflows, no longer skip the buffer allocation"
CVE-2017-6350;Prevent Access Over Bounds;"Very high values of ""ue_size” (due to corrupt undo files), which causes integer overflows, no longer skip the buffer allocation"
CVE-2017-6889;Change Buffer Size;"""huff"" buffers size increased to 1024 ushort (2048 bytes)"
CVE-2018-11219;Prevent Access Over Bounds;Improve bound checks on lua_State buffer
CVE-2018-15857;Remove Invalid Free;Pass the pointer value instead of pointer's address to free()
CVE-2017-14040;Check Input Size;Avoid excessive memory allocation for > 10MB files 
CVE-2018-7408;Employ New Algorithm;Replace ../utils/correct-mkdir() with mkdirp() to avoid owenership changes of /users and /etc directories from root to the caller user
CVE-2018-12649;Limit Attempts;PUT login requests are now subject to the attempt limit
CVE-2016-10223;Sanitize External Input;Escape special characters from id HTTP request parameter
CVE-2020-1712;Remove Race Conditions;Re-resolve callback/userdata instead of caching it
CVE-2014-9653;Handle Error Cases;Treat partial reads (i.e., reading a number of bytes lower than the required, which may occur due to a new EOF or a signal to stop the reading) as error
CVE-2017-6908;Sanitize External Input;Escape special characters from fID HTTP request parameter
CVE-2018-18467;Ask User Confirmation;The text of a message shared via XMPP is now added only if draft box is empty
CVE-2018-16975;Sanitize External Input;Escape special characters from css HTTP request parameter
CVE-2018-16974;Sanitize External Input;Improve sanitization of filenames by adding a trim and additional blacklisted extensions
CVE-2016-0721;Improve Session Management;Clear session data on logout
CVE-2014-2236;Sanitize External Input;Escape special characters from multiple parameters
CVE-2019-15140;Check Input Size;Check that the bounds of a Matlab file are not overcome
CVE-2016-10215;Sanitize External Input;Escape special characters from multiple HTTP POST parameters
CVE-2018-14773;Remove Vulnerable Code;Stop considering the obsolete X-Original-URL or X-Rewrite-URL HTTP request headers
CVE-2016-5733;Sanitize External Input;Escape special HTML characters from parameters and filter out JS-generated links
CVE-2016-8899;Sanitize External Input;Prevent the creation of arbitrary obejcts (e.g., SimpleXMLElement) with arbitrary content
CVE-2016-4563;Prevent Access Over Bounds;Improve check on max_strokes
CVE-2018-13450;Sanitize External Input;Ensure that status_batch query parameter is alphanumeric
CVE-2017-5345;Sanitize External Input;Escape special SQL characters from term HTTP GET param
CVE-2018-14681;Prevent Access Over Bounds;Properly manage non-terminated 9 byte strings (i.e., without \0)
CVE-2018-18434;Sanitize External Input;Ensure that downloaded filename is without of ../
CVE-2018-14504;Sanitize External Input;Sanitize filter_name value before displaying it
CVE-2018-17104;Implement Synchronizer Token Pattern;Implement session-level Synchronizer Token Pattern for editing a user
CVE-2017-16613;Hide Sensitive Information;Hash the auth token before logging it in verbose mode
CVE-2018-11562;Sanitize External Input;"Sanitize URL from JS payload, which would be executed when coming via a malicious URL and clicking the div ""Include deleted attributes"""
CVE-2018-13006;Prevent Access Over Bounds;Check the position of tmpName's index before reading from it and fix the check on p->nameUTF8 length
CVE-2018-12248;Change Buffer Size;Extend heap-allocated stack when there are too many arguments
CVE-2018-12247;Fix Initialization;"mrb_obj_clone function now properly setups the ""object"" state, without copying all flags"
CVE-2018-12249;Check Before Dereferencing;"Always check ""super"" field before blindly dereferecing it"
CVE-2018-14680;Sanitize External Input;Empty filenames are considered errors
CVE-2018-14679;Prevent Access Over Bounds;Add the missing equality check on chm->num_chunks to states the out-of-bounds
CVE-2018-14352;Change Buffer Size;Leave additional space for quotes characters
CVE-2018-14353;Handle Error Cases;"Check size before updating ""dlen"" variable to avoid integer underflow"
CVE-2018-14349;Hide Sensitive Information;"Print the ""NO"" responses only from idata->buf"
CVE-2018-14350;Prevent Access Over Bounds;"Check ""ptmp"" in loops to avoid writing over bounds of ""tmp"""
CVE-2018-14358;Prevent Access Over Bounds;"Check ""ptmp"" in loops to avoid writing over bounds of ""tmp"""
CVE-2018-14362;Sanitize External Input;Sanitize id to remove '/' characters
CVE-2018-14354;Sanitize External Input;Quote subscribe path to escapes backticks
CVE-2018-14357;Sanitize External Input;Enable the possibility to escape backicks when quoting subscribe paths
CVE-2018-14359;Prevent Access Over Bounds;Check lenght of buffer before copying data from another buffer
CVE-2018-14363;Sanitize External Input;"Sanitize ""dest"" to remove '/' characters"
CVE-2018-15473;Remove Discrepancies Among Inputs;Authentiction of users was moved after the package containing the request was totally parsed
CVE-2017-9226;Prevent Access Over Bounds;Check that octal values are smaller than 256
CVE-2017-9229;Check Before Dereferencing;Check the reg->dmax value in forward_search_range to prevent it causing a NULL pointer dereference in left_adjust_char_head()
CVE-2017-9224;Prevent Access Over Bounds;Improve pointer check before dereferencing in match_at()
CVE-2017-9225;Prevent Access Over Bounds;Return invalid result for codepoint 0xFFFFFFFF
CVE-2014-3144;Prevent Access Over Bounds;"Check size of ""skb->len"" and fix subtraction"
CVE-2015-9253;Remove Race Conditions;Duplicate the socket instead of copying it to STDIN 
CVE-2018-15605;Sanitize External Input;Sanitize warning messages
CVE-2014-1985;Sanitize External Input;Sanitize back_url parameter before going back
CVE-2018-7247;Prevent Access Over Bounds;"Limit writes on ""charbuf"" to its maximum size since ""rootname"" comes from user input"
CVE-2018-11331;Sanitize External Input;Extend file extensions blacklist
CVE-2018-11330;Sanitize External Input;Improve sanitization of filenames
CVE-2018-7206;Change User Permissions;Non-admin user now use the same group whitelist check mechanism as admins 
CVE-2015-9252;Handle Error Cases;Resolve recursion infinite loop
CVE-2017-18184;Prevent Access Over Bounds;Add padding for short parameters
CVE-2013-6371;Employ New Algorithm;Fix the hashing functionality to avoid DoS via crafted json data
CVE-2018-7663;Sanitize External Input;Sanitize user biography text
CVE-2018-14345;Improve Session Management;Check that authentication was successful before unlocking the session
CVE-2017-18360;Handle Error Cases;Avoid division by zero
CVE-2018-17605;Sanitize External Input;Normalize file paths to prevent reading bytecode files loaded by the classloader
CVE-2016-7514;Prevent Access Over Bounds;Check if image->depth size is not 1
CVE-2016-5097;Hide Sensitive Information;Make extrarnal links pass through url.php to strip away tokens
CVE-2016-5303;Sanitize External Input;Block data:text/html URLs to be put into link-like elements
CVE-2018-11532;Sanitize External Input;Escape special HTML characters from subject
CVE-2016-9436;Fix Initialization;Properly inizialize tagname to handle all cases
CVE-2017-6310;Remove Type Confusion;Check a->type before accessing values.data union variable
CVE-2017-6309;Remove Type Confusion;Check a->type before accessing values.data union variable
CVE-2018-19199;Prevent Access Over Bounds;Check keyLen and valueLen value before multiplying them with worstCase
CVE-2018-17292;Check Input Size;Do not allow fileBytes to be fewer than 4 bytes long
CVE-2018-17293;Check Before Dereferencing;Check if there is an emscripten memory available before dereferecing its pointer
CVE-2017-6390;Sanitize External Input;Sanitize url GET parameter
CVE-2018-14938;Prevent Access Over Bounds;Check len value before accessing hdr struct
CVE-2017-6800;Remove Type Confusion;Use int* type to access the memory buffer instead of long*
CVE-2017-6802;Prevent Access Over Bounds;Check in pointer value is within the bounds of src
CVE-2017-2920;Prevent Access Over Bounds;Ensure that input_string_size does not go beyond READ_BUFFER_SIZE when accessing input_string
CVE-2017-14151;Change Buffer Size;Allocate an additional byte for p_code_block->data in pj_tcd_code_block_enc_allocate_data()
CVE-2018-19351;Sanitize External Input;Apply CSP header in nbconvert responses
CVE-2017-12062;Sanitize External Input;Sanitize f_filter value before rendering into an HTML page
CVE-2015-1521;Prevent Access Over Bounds;Properly handle cases when endp->pkt_length is negative or zero
CVE-2015-1522;Prevent Access Over Bounds;Properly handle cases when endp->pkt_length is negative or zero
CVE-2017-6511;Sanitize External Input;Sanitize action parameter before rendering into an HTML page
CVE-2017-7481;Sanitize External Input;Added to global lookup param and cfg option to allow unsafe return values from loopup-plugin
CVE-2017-14638;Check Before Dereferencing;Ensure that AP4_HvccAtom::Create and AP4_AvccAtom::Create successfully create the buffer before dereferencing atom pointer
CVE-2017-14639;Remove Type Confusion;Use the proper character types (unsigned char AP4_UI08) instead of signed char and int
CVE-2013-5705;Sanitize External Input;"Recognize capitalized ""Chuncked"" Transfer Encoding in HTTP other than non-capitalized ""chuncked"""
CVE-2020-15861;Remove Vulnerable Code;Stop manually caching mib_indexes directory into /tmp
CVE-2013-2506;Fix Initialization;Remove capability to self assign user roles 
CVE-2017-13671;Sanitize External Input;Improve input sanitization to handle HTML comments
CVE-2015-8537;Hide Sensitive Information;Return visible_details instead of details
CVE-2015-8346;Hide Sensitive Information;Hide subject of non-visible issues
CVE-2018-11245;Sanitize External Input;Sanitize cortex-json before rendering into a popup
CVE-2018-15601;Sanitize External Input;Anticipate file name decode before restricting on extensions
CVE-2018-12418;Check Input Size;Avoid excessive memory allocation for > 20MB files
CVE-2017-14032;Improve Certificate Verification;Do not allow long certificate chains
CVE-2018-9988;Prevent Access Over Bounds;Add bounds check of p before signature length read
CVE-2018-9989;Prevent Access Over Bounds;Fix possible integer overflow that led to buffer over-read
CVE-2018-3720;Fix Initialization;Do not consider __proto__ property when copying an object
CVE-2015-1334;Change User Permissions;Do not allow over-mount of /proc on LXC containers
CVE-2015-4082;Ask User Confirmation;Require user approval before doing an automatic backup on unencrypted mode, which was set by an attacker 
CVE-2016-10700;Change User Permissions;Reject unexistent users when logging with BASIC and as guests
CVE-2013-4701;Sanitize External Input;Disable XML External Entities and libxml errors
CVE-2016-10011;Change Buffer Size;Pre-allocate blob buffer to prvent child processes to use realloc() to gain access to key values from parent SSH processes
CVE-2018-12467;Sanitize External Input;Stop following project links
CVE-2017-1000501;Sanitize External Input;"Escape ""config"" and ""migrate"" parameters"
CVE-2017-1000423;Sanitize External Input;Improve escaping of backslashes of multiple install parameters
CVE-2017-11171;Improve Resource Management;Create the GsmXSMPClient object only when there's a real XSMP connection by moving the connection timeout
CVE-2016-1249;Prevent Access Over Bounds;Check the alignment of prepared statements placeholders and the given parameters 
CVE-2012-3458;Employ New Algorithm;Change from AES ECB mode to CTR
CVE-2017-14723;Sanitize External Input;Improve preparation of statements to handle % characters and additional placeholders
CVE-2011-1007;Redirect After Unsafe HTTP Method;Redirect to desired page after login with 303 redirection to avoid back and reload attack
CVE-2017-7881;Improve Referer Header Check;Improve the Referer HTTP header check to protect against CSRF
CVE-2016-10189;Check Before Dereferencing;Check if bu's buffer was proprely allocated
CVE-2014-9114;Sanitize External Input;Escape cache code quotation marks
CVE-2018-12435;Remove Discrepancies Among Inputs;Change computations of DSA and ECDSA to prevent memory-cache side-channel attacks
CVE-2017-13098;Remove Discrepancies Among Inputs;Ensure that the size of the decrypted message is 48 bytes before going on
CVE-2014-2552;Improve Security Configuration;Change default role policy
CVE-2015-4412;Sanitize External Input;Replace ^ and $ with \A and \z to resist possible \n
CVE-2015-2831;Check Input Size;Handle environment variable names to be longer than 500 characters
CVE-2011-3346;Employ New Algorithm;Lazy allocation of resources
CVE-2015-8957;Employ New Algorithm;A new control mechanism is implemented to check the correctness of the input
CVE-2017-11721;Prevent Access Over Bounds;Improve check on msg->data buffer
CVE-2016-1246;Prevent Access Over Bounds;Check on the length of the sprintf input variable to avoid overflow
CVE-2013-2127;Prevent Access Over Bounds;Fix data_maximum calculation
CVE-2012-1176;Improve Security Configuration;Changed the code to accomodate a new security library
CVE-2019-8460;Improve Resource Management;Limit to 128 the maximum number of TCP SACK holes
CVE-2015-6031;Prevent Access Over Bounds;Make sure l is not greater than MINIUPNPC_URL_MAXSIZ
CVE-2014-9765;Prevent Access Over Bounds;Check place value if within bounds of parsed buffer
CVE-2011-0530;Prevent Access Over Bounds;Check size to avoid buffer overflow
CVE-2014-3478;Prevent Access Over Bounds;Save space to host the size of the pascal string length
CVE-2017-5581;Check Input Size;Adding if statements to handle invalid inputs
CVE-2014-9140;Handle Error Cases;Changed the mechanism to allocate memory
CVE-2013-6370;Improve Security Configuration;Updated the definition of the configuration file
CVE-2013-2220;Handle Error Cases;Adding conditions to if statements to handle corner cases
CVE-2015-3905;Remove Type Confusion;Cast arguments to <ctype.h> functions to unsigned char
CVE-2017-6429;Handle Error Cases;Adding conditions to if statements to handle corner cases
CVE-2016-4478;Prevent Access Over Bounds;Chang the method of bytes copy
CVE-2012-1122;Handle Error Cases;Insert check for authenticated users with the bug threshold report related to the target project and not to the current project
CVE-2014-2058;Handle Error Cases;Adding conditions to if statements to handle corner cases
CVE-2015-8379;Sanitize External Input;Add an escape method
CVE-2012-6119;Improve Security Configuration;Adding an authentication mechanism
CVE-2019-18933;Improve Security Configuration;Adding an authentication mechanism
CVE-2014-9620;Improve Security Configuration;Updated the definition of the configuration file
CVE-2018-12030;Improve Security Configuration;Updated library
CVE-2018-18585;Handle Error Cases;Adding conditions to if statements to handle corner cases
CVE-2016-6639;Employ New Algorithm;A new control mechanism is implemented to check the correctness of the input
CVE-2017-2661;Sanitize External Input;Add an escape method
CVE-2016-7532;Prevent Access Over Bounds;Check on negative values for cnt
CVE-2017-5510;Handle Error Cases;Modified the function that acquires the information of an image to avoid writing out of bounds through a craft psd file
CVE-2015-8958;Handle Error Cases;Eliminated checking and launching the exception CorruptImageError
CVE-2016-9559;Check Before Dereferencing;Check if text pointer is not null before dereferencing it
CVE-2016-7529;Check Input Size;Set maximum memory allowed for requests
CVE-2010-4802;Sanitize External Input;Remove aggressive check on variable $name
CVE-2013-7177;Improve Security Configuration;Updated the definition of the configuration file
CVE-2013-7176;Improve Security Configuration;Updated the definition of the configuration file
CVE-2013-7222;Improve Security Configuration;Adding an authentication mechanism
CVE-2018-12043;Sanitize External Input;Adding an escape method
CVE-2014-9938;Sanitize External Input;HTML escape for XSS
CVE-2016-10513;Sanitize External Input;HTML escape for XSS
CVE-2017-7215;Sanitize External Input;Sanitation to avoid web or html injection
CVE-2015-6545;Improve Security Configuration;Add an authentication mechanism
CVE-2013-4881;Improve Referer Header Check;Improve the check on referer HTTP header
CVE-2013-5313;Improve Referer Header Check;Improve the check on referer HTTP header
CVE-2012-4668;Sanitize External Input;Improve the sanitization on html_signature
CVE-2016-2539;Implement Synchronizer Token Pattern;Implement STP for install_modules.php
CVE-2014-0168;Improve Referer Header Check;Improve the check on referer HTTP header
CVE-2015-2680;Implement Synchronizer Token Pattern;Implement STP
CVE-2016-0720;Implement Synchronizer Token Pattern;Improve the check on already existing STP
CVE-2017-10680;Implement Synchronizer Token Pattern;Adding pwg_token on permalink & cat_options
CVE-2017-10678;Implement Synchronizer Token Pattern;Adding pwg_token on permalink & cat_options
CVE-2017-10681;Sanitize External Input;HTML escape for XSS
CVE-2016-4069;Implement Synchronizer Token Pattern;Added a single request token to avoid CSRF via download urls
CVE-2015-5395;Improve Security Configuration;Added AngularJS XSRF support
CVE-2014-0120;Implement Synchronizer Token Pattern;Add CSRF check on admin terminal authentication
CVE-2014-9459;Handle Error Cases;Adding a condition to an if statement to handle a corner case
CVE-2017-5492;Employ New Algorithm;A new control mechanism is implemented to check the correctness of the input
CVE-2016-6897;Improve Security Configuration;Updated the definition of the configuration file
CVE-2016-6635;Improve Referer Header Check;Add the check on referer HTTP header from AJAX calls
CVE-2015-2861;Sanitize External Input;HTML escape for XSS
CVE-2017-16244;Employ New Algorithm;A new control mechanism is implemented to check the correctness of the input
CVE-2013-2023;Sanitize External Input;Add blacklisted of illegal JS commands
CVE-2011-2932;Sanitize External Input;Changed the way input text is processed
CVE-2015-5356;Sanitize External Input;Changed the way input text is processed
CVE-2016-10083;Sanitize External Input;HTML escape for XSS
CVE-2017-12066;Sanitize External Input;HTML escape for XSS
CVE-2015-5460;Sanitize External Input;The text is sanitized to avoid web injection
CVE-2014-2235;Sanitize External Input;Changed the way input text is processed
CVE-2017-11691;Sanitize External Input;HTML escape for XSS
CVE-2016-7149;Sanitize External Input;HTML escape for XSS
CVE-2016-7150;Sanitize External Input;Formatting outputs
CVE-2015-8310;Sanitize External Input;HTML escape for XSS
CVE-2014-2024;Sanitize External Input;Escape value of a HTTP request param
CVE-2015-1347;Improve Security Configuration;Fix possible vuln setting client lang pref
CVE-2016-4848;Improve Security Configuration;Updated the definition of the configuration file
CVE-2013-4880;Sanitize External Input;Added htmlspecialcharaters function to avoid web injection
CVE-2012-2129;Sanitize External Input;Escape target error message
CVE-2017-14241;Sanitize External Input;Replaced all $_POST with GETPOST
CVE-2015-3429;Remove Vulnerable Code;The vulnerable example.html file is totally removed
CVE-2016-5731;Sanitize External Input;Added htlm specialchars to avoid xss
CVE-2013-4492;Sanitize External Input;Escape and other controls to avoid xss
CVE-2019-17670;Sanitize External Input;Sanitize relative URIs
CVE-2014-3772;Sanitize External Input;Escape value of a HTTP request param
CVE-2015-5282;Sanitize External Input;Escape value of a HTTP request param
CVE-2017-1000457;Sanitize External Input;Escape value of a HTTP request param
CVE-2018-17552;Sanitize External Input;All sql queries are parameterized
CVE-2014-1944;Employ New Algorithm;A new control mechanism is implemented to check the correctness of the input
CVE-2014-1879;Sanitize External Input;Escape value of a HTTP request param
CVE-2017-14240;Hide Sensitive Information;Reduce verbosity in error messages
CVE-2014-2067;Handle Error Cases;A try-catch construct is added to manage a possible exception
CVE-2014-2065;Handle Error Cases;A new method is added to check the input and handle a possible exception
CVE-2012-1902;Improve Security Configuration;Check if the configuration file exists
CVE-2010-5312;Handle Error Cases;A new function is added to check the input and handle a possible exception
CVE-2014-8352;Handle Error Cases;An else statement is added to manage a possible exception
CVE-2016-1222;Sanitize External Input;Escape value of a HTTP request param
CVE-2015-7580;Sanitize External Input;Convert CDATA nodes to TEXT
CVE-2014-3148;Sanitize External Input;Escape value of a HTTP request param
CVE-2014-8960;Sanitize External Input;Escape value of a HTTP request param
CVE-2014-5451;Sanitize External Input;Escape value of a HTTP request param
CVE-2014-9701;Sanitize External Input;Fixing a regular expression required to check the input value
CVE-2015-5612;Sanitize External Input;Escape value of a HTTP request param
CVE-2015-5613;Sanitize External Input;Escape value of a HTTP request param
CVE-2015-4671;Sanitize External Input;Sanitize zone_id and country_id by casting them to int
CVE-2015-8375;Sanitize External Input;Add checks on robots.txt
CVE-2017-14619;Sanitize External Input;Escape value of a HTTP request param
CVE-2013-3082;Sanitize External Input;Escape value of a HTTP request param
CVE-2014-2260;Sanitize External Input;Escape value of a HTTP request param
CVE-2017-5553;Sanitize External Input;Accept only correct urls (starting with http: // https: // or /) to avoid web injection
CVE-2015-5381;Sanitize External Input;Sanitize $err_str
